syntax = "proto3";

message Car {
    string plateNumber = 1;      
    string make = 2;
    string model = 3;
    int32 year = 4;
    double dailyPrice = 5;
    int32 mileage = 6;
    string status = 7;
}

message User {
    string userId = 1;
    string name = 2;
    string role = 3;
}

message CartItem {
    string plateNumber = 1;
    string startDate = 2;
    string endDate = 3;
}

message Reservation {
    string reservationId = 1;
    string customerId = 2;
    repeated CartItem items = 3;
    double totalPrice = 4;
}


message AddCarRequest {
    string make = 1;
    string model = 2;
    int32 year = 3;
    double dailyPrice = 4;
    int32 mileage = 5;
    string plate = 6;
    string status = 7;
}
message AddCarResponse {
    Car car = 1;
}

message CreateUsersResponse {
    repeated User users = 1;
}

message UpdateCarRequest {
    string plate = 1;
    double dailyPrice = 2;
    string status = 3;
}
message UpdateCarResponse {
    Car car = 1;
}

message RemoveCarRequest {
    string plate = 1;
}
message RemoveCarResponse {
    repeated Car cars = 1;
}

message ListAvailableCarsRequest {
    string filter = 1;
}

message SearchCarRequest {
    string plate = 1;
}
message SearchCarResponse {
    bool found = 1;
    Car car = 2;
}

message AddToCartRequest {
    string customerId = 1;
    string plate = 2;
    string startDate = 3;
    string endDate = 4;
}
message AddToCartResponse {
    bool success = 1;
    CartItem item = 2;
}

message PlaceReservationRequest {
    string customerId = 1;
}
message PlaceReservationResponse {
    bool success = 1;
    Reservation reservation = 2;
    string message = 3;
}


service CarRental {
    rpc add_car(AddCarRequest) returns (AddCarResponse);
    rpc create_users(stream User) returns (CreateUsersResponse);
    rpc update_car(UpdateCarRequest) returns (UpdateCarResponse);
    rpc remove_car(RemoveCarRequest) returns (RemoveCarResponse);
    rpc list_available_cars(ListAvailableCarsRequest) returns (stream Car);
    rpc search_car(SearchCarRequest) returns (SearchCarResponse);
    rpc add_to_cart(AddToCartRequest) returns (AddToCartResponse);
    rpc place_reservation(PlaceReservationRequest) returns (PlaceReservationResponse);
}
